# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
:inetRouter => {
        :box_name => "centos/6",
        :net => [
                   {ip: '10.10.1.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "inet"},
                ]
  },
:inetRouter2 => {
        :box_name => "centos/6",
        :net => [
                   {ip: '10.10.1.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "inet"},
                ]
  },
  :centralServer => {
        :box_name => "centos/7",
        :disks => {
                :sata1 => {
                        :dfile => home + '/VirtualBox VMs/disks/sata2.vdi',
                        :size => 5000,
                        :port => 1
                }
        },
        :net => [
                   {ip: '192.168.2.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "uplinkcentral"},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
	:disks => {
		:sata1 => {
			:dfile => home + '/VirtualBox VMs/disks/sata1.vdi',
			:size => 5000,
			:port => 1
		}
        },
        :net => [
                   {ip: '10.10.1.3', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "inet"},
                   {ip: '192.168.2.1', adapter: 5, netmask: "255.255.255.0", virtualbox__intnet: "uplinkcentral"},
                ]
  },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "512"]
        end
        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
         when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum update
            yum install -y nmap
            echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
            sysctl --system
            nmcli c mod "System eth0" ipv4.never-default true
            echo "GATEWAY=10.10.1.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            SHELL
        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            nmcli c mod "System eth0" ipv4.never-default true
            echo "GATEWAY=192.168.2.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            SHELL
        when "inetRouter2"
          box.vm.network "forwarded_port", host_ip: "127.0.0.1", guest: 8080, host: 8080
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum update
            yum install -y libselinux-python
            echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
            sysctl net.ipv4.conf.forwarding=1
            sysctl --system
            ip route add 192.168.2.0/24 via 10.10.1.3 dev eth1
            iptables -t nat -A PREROUTING -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.168.2.2:80
            SHELL
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum update
            yum install -y libselinux-python
            echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
            sysctl net.ipv4.conf.forwarding=1
            sysctl --system
            ip route add 192.168.2.0/24 via 10.10.1.3 dev eth1
            iptables -t nat -A POSTROUTING -s 10.10.1.0/24 -o eth0 -j MASQUERADE
            iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth0 -j MASQUERADE
            SHELL
        end

      end

  end
  
  
end